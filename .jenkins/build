#!/usr/bin/env groovy
// Copyright (C) 2021 Edge Network Technologies Limited
// Use of this source code is governed by a GNU GPL-style license
// that can be found in the LICENSE.md file. All rights reserved.

// bin-linux-arm64
// bin-linux-x64
// bin-macos-arm64
// bin-macos-x64
// bin-win-arm64.exe
// bin-win-x64.exe

def buildAndPushImage(registry, registryCredential, tag, buildArgs) {
  docker.withRegistry("https://$registry", registryCredential) {
    def image = docker.build("$registry/$tag", "$buildArgs .")
    image.push()
    return "$registry/$tag"
  }
}

def deployScript() {
  return b64e('''
  #!/bin/bash

  # Pull the latest version
  docker pull $IMAGE

  # Transfer binaries from image to volume
  docker run \
    --rm \
    --volume fileserver-data:/mnt/fileserver \
    $IMAGE \
      uname
  ''')
}

pipeline {
  agent {
    label 'remote'
  }
  stages {

    stage('Build') {
      steps {
        script {
          def buildArgs = "--build-arg NETWORK=$NETWORK --build-arg NODE=$NODE"
          buildAndPushImage(REGISTRY, REGISTRY_CREDENTIAL, NAME, buildArgs)
        }
      }
    }

    stage('Deploy') {
      steps {
        script {
          def sshPort = env.SSH_PORT != null ? env.SSH_PORT : 22
          def ssh = "ssh -o ServerAliveInterval=120 -o ServerAliveCountMax=5 -o StrictHostKeyChecking=no -p ${sshPort} jenkins@${DEPLOY_TARGET} "
          def filename = "deploy_${UUID.randomUUID().toString()}.sh"
          def script = deployScript()
          def image = "$REGISTRY/$NAME"

          sshagent(credentials: ['a687b920-fcb4-41e4-a878-5ae1f6850b26']) {
            println "> deploying CLI binaries (${image}) to ${DEPLOY_TARGET}..."

            // Execute the script
            sh "$ssh 'echo $script | base64 -d > ${filename} && \
              chmod +x ${filename} && \
              IMAGE=$image \
                bash -x ./${filename} && \
              rm ${filename}'"
          }
        }
      }
    }

    // stage('Upload binaries') {
    //   steps {
    //     script {
    //       //
    //     }
    //   }
    // }
  }
}
